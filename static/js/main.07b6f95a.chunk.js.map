{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/Movie.js","components/MovieList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","getFeaturedMovies","className","onClick","SearchBar","searchValue","setSearchValue","name","type","placeholder","value","onChange","event","target","Movie","title","poster_path","overview","vote_average","release_date","src","alt","MovieList","movies","map","movie","i","App","useState","setMovies","useEffect","getMovies","API_KEY","process","a","FEATURED_API_URL","fetch","request","json","response","results","SEARCH_API_URL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAaeA,EAXA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAChB,OACE,sBAAKC,UAAU,QAAf,UACA,mDACA,qBAAKA,UAAU,WAAf,SACA,oBAAIC,QAASF,EAAb,mCCUWG,EAfG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAC9B,OACI,qBAAKJ,UAAW,YAAhB,SACI,uBACAK,KAAK,YACLL,UAAU,SACVM,KAAK,SACLC,YAAY,gBACZC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAWN,EAAeM,EAAMC,OAAOH,aC0B9CI,G,KAhCD,SAAC,GAMR,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OACE,sBAAKjB,UAAU,QAAf,UACE,qBACEkB,IACEJ,EAbM,kCAcQA,EACV,8DAENK,IAAKN,IAEP,sBAAKb,UAAU,aAAf,UACE,6BAAKa,GAAgB,6BACrB,+BAAOG,OAET,qBAAKhB,UAAU,gBAAf,SACE,6BAAKiB,MAEP,sBAAKjB,UAAU,iBAAf,UACE,6BAAKa,IACL,4BAAIE,YCRGK,EAnBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,qBAAKrB,UAAU,aAAf,SACGqB,EAAOC,KAAI,SAACC,EAAOC,GAClB,OACE,cAAC,EAAD,CAEEX,MAAOQ,EAAOG,GAAGX,MACjBC,YAAaO,EAAOG,GAAGV,YACvBC,SAAUM,EAAOG,GAAGT,SACpBC,aAAcK,EAAOG,GAAGR,aACxBC,aAAcI,EAAOG,GAAGP,cALnBO,SCwCFC,EA5CH,WAAM,MAGWC,mBAAS,IAHpB,mBAGVL,EAHU,KAGFM,EAHE,OAIqBD,mBAAS,IAJ9B,mBAIVvB,EAJU,KAIGC,EAJH,KAOjBwB,qBAAU,WACT7B,MACC,IAGF6B,qBAAU,WACTC,EAAU1B,KACV,CAACA,IAEF,IAAM2B,EAAUC,mCAEVhC,EAAiB,uCAAG,gCAAAiC,EAAA,6DACnBC,EADmB,sFAC+EH,EAD/E,qBAEHI,MAAMD,GAFH,cAEnBE,EAFmB,gBAGFA,EAAQC,OAHN,QAGnBC,EAHmB,QAIbC,SAASX,EAAUU,EAASC,SAJf,2CAAH,qDAQjBT,EAAS,uCAAG,gCAAAG,EAAA,6DACXO,EADW,6DAC4DT,EAD5D,kBAC6E3B,GAD7E,SAEK+B,MAAMK,GAFX,cAEXJ,EAFW,gBAGMA,EAAQC,OAHd,QAGXC,EAHW,QAILC,SAASX,EAAUU,EAASC,SAJvB,2CAAH,qDAOf,OACE,gCACE,sBAAKtC,UAAU,SAAf,UACC,cAAC,EAAD,CAAQD,kBAAmBA,IAC3B,cAAC,EAAD,CAAWI,YAAaA,EAAaC,eAAgBA,OAEvD,cAAC,EAAD,CAAWiB,OAAQA,QCjCRmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.07b6f95a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({ getFeaturedMovies }) => {\r\n  return(\r\n    <div className=\"title\">\r\n    <h1>Movie Application</h1>\r\n    <div className=\"featured\">\r\n    <h2 onClick={getFeaturedMovies}>Featured Movies</h2>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst SearchBar = ({ searchValue, setSearchValue }) => {\r\n    return (\r\n        <div className =\"searchbar\">\r\n            <input\r\n            name=\"movieName\"\r\n            className=\"search\" \r\n            type=\"search\"\r\n            placeholder=\"Search Movies\"\r\n            value={searchValue}\r\n            onChange={(event) => setSearchValue(event.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport '../styles/Movie.css';\r\n\r\nconst IMG_API = 'https://image.tmdb.org/t/p/w500';\r\n\r\nconst Movie = ({\r\n  title,\r\n  poster_path,\r\n  overview,\r\n  vote_average,\r\n  release_date,\r\n}) => {\r\n  return (\r\n    <div className='movie'>\r\n      <img\r\n        src={\r\n          poster_path\r\n            ? IMG_API + poster_path\r\n            : 'https://sd.keepcalms.com/i/error-404-no-wallpaper-found.png'\r\n        }\r\n        alt={title}\r\n      />\r\n      <div className='movie-info'>\r\n        <h3>{title ? title : 'No information available'}</h3>\r\n        <span>{vote_average}</span>\r\n      </div>\r\n      <div className='movie-release'>\r\n        <h3>{release_date}</h3>\r\n      </div>\r\n      <div className='movie-overview'>\r\n        <h3>{title}</h3>\r\n        <p>{overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport '../styles/Movie.css';\r\nimport Movie from './Movie';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <div className='movie-list'>\r\n      {movies.map((movie, i) => {\r\n        return (\r\n          <Movie\r\n            key={i}\r\n            title={movies[i].title}\r\n            poster_path={movies[i].poster_path}\r\n            overview={movies[i].overview}\r\n            vote_average={movies[i].vote_average}\r\n            release_date={movies[i].release_date}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport SearchBar from './components/SearchBar';\nimport MovieList from './components/MovieList';\n\n\nconst App = () => {\n\n //States\n const [movies, setMovies] = useState([]);\n const [searchValue, setSearchValue] = useState('');\n\n//Calling getFeaturedMovies when page loads\n useEffect(() => {\n  getFeaturedMovies();\n}, []);\n\n// Calling getMovies based on user's search when inputfield changes\n useEffect(() => {\n  getMovies(searchValue);\n},[searchValue]);\n\n const API_KEY = process.env.REACT_APP_MOVIE_API;\n //calling featured movies when page loads\n const getFeaturedMovies = async () => {\n  const FEATURED_API_URL = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${API_KEY}&page=1 `;\n  const request = await fetch(FEATURED_API_URL);\n  const response = await request.json();\n  if(response.results) setMovies(response.results);\n };\n\n //calling movies by search value\n const getMovies = async () => {\n  const SEARCH_API_URL = `https://api.themoviedb.org/3/search/movie?&api_key=${API_KEY}&query=${searchValue}`;\n  const request = await fetch(SEARCH_API_URL);\n  const response = await request.json();\n  if(response.results) setMovies(response.results);\n };\n\n return (\n   <div>\n     <div className=\"header\">\n      <Header getFeaturedMovies={getFeaturedMovies} />\n      <SearchBar searchValue={searchValue} setSearchValue={setSearchValue} />\n     </div>\n    <MovieList movies={movies} />\n   </div>\n );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}